
      <div id="map_canvas" style=" width: 100%; min-height: 100%;"></div>
    <script type="text/javascript">
   overlayTypeOptions = [{
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/miscanthus/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Miscanthus"
  },<% if logged_in? and current_user.page_access_level <= 2  -%> {
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/poplar/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Poplar"
  }, {
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/switchgrass/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Switchgrass"
  }, {
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/miscanthus_poplar/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Miscanthus - Poplar"
  }, {
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/miscanthus_switchgrass/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Miscanthus - Switchgrass"
  }, {
    getTileUrl: function(coord, zoom) {
        var normalizedCoord = getNormalizedCoord(coord, zoom);
        if (!normalizedCoord) {
          return null;
        }
        return "https://www.betydb.org/maps/mapoverlay/switchgrass_poplar/"+ normalizedCoord.x + "-" + normalizedCoord.y + "-" + zoom + ".png";
    },
    tileSize: new google.maps.Size(256, 256),
    isPng: true,
    maxZoom: 9,
    minZoom: 2,
    name: "Switchgrass - Poplar"
  }<% end -%>];

  var styles = [{
    featureType: "poi",
    elementType: "all",
    stylers: [
      { visibility: "off" }
      ]
  }];


  function initialize() {
    var myLatlng = new google.maps.LatLng(40.44,-95.98);
    var myOptions = {
      center: myLatlng,
      zoom: 4,
      mapTypeControlOptions: {
        <% if logged_in? and current_user.page_access_level <= 2  %>
        mapTypeIds: ['Miscanthus','Poplar','Switchgrass','Miscanthus-Poplar','Miscanthus-Switchgrass','Switchgrass-Poplar'],
        <% else -%>
        mapTypeIds: ['Miscanthus'],
        <% end -%>
        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
      },
      maxZoom: 9,
      minZoom: 2
    };

    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    map.mapTypes.set('Miscanthus',new google.maps.StyledMapType(styles, { name: 'Miscanthus' }));
    <% if logged_in? and current_user.page_access_level <= 2  %>
    map.mapTypes.set('Poplar',new google.maps.StyledMapType(styles, { name: 'Poplar' }));
    map.mapTypes.set('Switchgrass',new google.maps.StyledMapType(styles, { name: 'Switchgrass' }));
    map.mapTypes.set('Miscanthus-Poplar',new google.maps.StyledMapType(styles, { name: 'Miscanthus-Poplar' }));
    map.mapTypes.set('Miscanthus-Switchgrass',new google.maps.StyledMapType(styles, { name: 'Miscanthus-Switchgrass' }));
    map.mapTypes.set('Switchgrass-Poplar',new google.maps.StyledMapType(styles, { name: 'Switchgrass-Poplar' }));
    <% end -%>
    google.maps.event.addListener(map, 'maptypeid_changed', function() {
      change_overlay(this.mapTypeId);
    });

    map.setMapTypeId('Miscanthus');

 
    //infowindow = new google.maps.InfoWindow();
    //var contentString = "";
    var circle;

    var res;

    google.maps.event.addListener(map,'click',function(event) {
      locationLookup(event.latLng)
    });

    //Once map loads assign id to mapType control so we apply styles
    google.maps.event.addListenerOnce(map,'tilesloaded',function(event) {
      //$$('div[title="Change map style"]')[0].getOffsetParent().style.width = "105px";
      $$('div[title="Change map style"]')[0].getOffsetParent().id = "mapTypeControl";
      //$$('div[style="margin-top: 5px; margin-right: 5px; margin-bottom: 5px; margin-left: 5px; z-index: 11; position: absolute; cursor: pointer; text-align: left; width: 85px; right: 0px; top: 0px; "]')[0].id = "mapTypeControl";
    });
    
    if(navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        tmp = position;
        locationLookup(new google.maps.LatLng(position.coords.latitude,position.coords.longitude))
      });
    } 
  }

  function overlay_scale(crop){
    var controlDiv = document.createElement('DIV');
    controlDiv.setAttribute("id","gmapscaleiphone");
    controlDiv.setAttribute("onclick","toggleScale()");

    var scaleImg = document.createElement('DIV');
    scaleImg.setAttribute("id","gmapscaleiphonescale");
    scaleImg.style.display = "none";
    scaleImg.innerHTML = '<img src="/'+crop+'-scale.png"></img>';
    controlDiv.appendChild(scaleImg);

    var linkSpan = document.createElement('SPAN');
    linkSpan.setAttribute("id","togglescalelink");
    linkSpan.innerHTML = "&laquo;";
    controlDiv.appendChild(linkSpan);


    //controlUI.innerHTML = '<div id="gmapscaleiphonescale" style="display:none"><img src="/'+crop+'-scale.png"></img></div>' + '<a id="togglescalelink" href="#" >&laquo;</a>';

    map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].clear();
    map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(controlDiv);

  }

  function locationLookup(latlng) {
    var geocoder = new google.maps.Geocoder();
      geocoder.geocode({'latLng': latlng}, function(results, status) {
        var county;
        var state;
        if (status == google.maps.GeocoderStatus.OK) {
          for(i=0;i<results[0].address_components.length;i++) { 
            if(results[0].address_components[i].types[0] == "administrative_area_level_2") { 
              county = results[0].address_components[i].long_name
            }
            if(results[0].address_components[i].types[0] == "administrative_area_level_1") { 
              state = results[0].address_components[i].long_name
            }
          }
          if (county && state) {
            <%= remote_function :url => {:action => "location_yields_lookup"},:type => :synchronous, :with => "'county='+county+'&state='+state+'&crop='+map.mapTypeId", :update => 'contentString'  %>
            infowindow = document.createElement('DIV');
            infowindow.innerHTML = '<div id="gmapinfowindowclose" onclick="map.controls[google.maps.ControlPosition.LEFT_BOTTOM].clear();"><img src="http://maps.gstatic.com/intl/en_us/mapfiles/iw_close.gif"/></div><div id="gmapinfowindowcontent">'+contentString+'</div>';
            infowindow.setAttribute("id","gmapinfowindow");


            map.controls[google.maps.ControlPosition.LEFT_BOTTOM].clear();
            map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(infowindow);
          }
        } 
      });

  }

  function toggleScale(){
    if($('gmapscaleiphonescale').style.display == "none"){
      Effect.SlideDown('gmapscaleiphonescale', {scaleX: true, scaleY:false });
      $('togglescalelink').innerHTML = "&raquo;";
    } else {
      Effect.SlideUp('gmapscaleiphonescale', {scaleX: true, scaleY:false })
      $('togglescalelink').innerHTML = "&laquo;";
      
    }
    
    return false;
  }

  function change_overlay(crop){
    map.overlayMapTypes.clear();
    switch (crop) {
      case 'Miscanthus':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[0]));
        overlay_scale("miscanthus");
        break;
      <% if logged_in? and current_user.page_access_level <= 2  -%>
      case 'Poplar':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[1]));
        overlay_scale("poplar");
        break;
      case 'Switchgrass':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[2]));
        overlay_scale("switchgrass");
        break;
      case 'Miscanthus-Poplar':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[3]));
        overlay_scale("miscanthus_poplar");
        break;
      case 'Miscanthus-Switchgrass':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[4]));
        overlay_scale("miscanthus_switchgrass");
        break;
      case 'Switchgrass-Poplar':
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[5]));
        overlay_scale("switchgrass_poplar");
        break;
      <% end -%>
      default:
        map.overlayMapTypes.insertAt(0,new google.maps.ImageMapType(overlayTypeOptions[0]));
        overlay_scale("miscanthus");
        break;
    }
  }

  // Normalizes the coords that tiles repeat across the x axis (horizontally)
  // like the standard Google map tiles.
  function getNormalizedCoord(coord, zoom) {
    var x = coord.x;
    var y = coord.y;

    
    // tile range in one direction range is dependent on zoom level
    // 0 = 1 tile, 1 = 2 tiles, 2 = 4 tiles, 3 = 8 tiles, etc
    var tileRange = 1 << zoom;

    // don't repeat across y-axis (vertically)
    if (y < 0 || y >= tileRange) {
      return null;
    }

    // repeat across x-axis
    if (x < 0 || x >= tileRange) {
      return null;
      x = (x % tileRange + tileRange) % tileRange;
    }

    return {
      x: x,
      y: y
    };
  }

  initialize();
//]]>

    </script>

